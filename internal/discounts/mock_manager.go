// Code generated by mockery 2.9.4. DO NOT EDIT.

package discounts

import (
	products "discounts-applier/internal/discounts/products"

	mock "github.com/stretchr/testify/mock"
)

// MockManager is an autogenerated mock type for the Manager type
type MockManager struct {
	mock.Mock
}

// GetProductsWithDiscount provides a mock function with given fields: filters
func (_m *MockManager) GetProductsWithDiscount(filters ...products.Filter) ([]Product, error) {
	_va := make([]interface{}, len(filters))
	for _i := range filters {
		_va[_i] = filters[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []Product
	if rf, ok := ret.Get(0).(func(...products.Filter) []Product); ok {
		r0 = rf(filters...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Product)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...products.Filter) error); ok {
		r1 = rf(filters...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
