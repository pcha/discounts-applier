// Code generated by mockery 2.9.4. DO NOT EDIT.

package products

import (
	mock "github.com/stretchr/testify/mock"
)

// MockRepository is an autogenerated mock type for the MockRepository type
type MockRepository struct {
	mock.Mock
}

// Find provides a mock function with given fields: _a0
func (_m *MockRepository) Find(_a0 ...Filter) ([]Product, error) {
	_va := make([]interface{}, len(_a0))
	for _i := range _a0 {
		_va[_i] = _a0[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []Product
	if rf, ok := ret.Get(0).(func(...Filter) []Product); ok {
		r0 = rf(_a0...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Product)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...Filter) error); ok {
		r1 = rf(_a0...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
